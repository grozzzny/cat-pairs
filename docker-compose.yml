version: '3.9'

services:
  client:
    container_name: practicum-client
    image: practicum-client
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        CLIENT_HOST: ${CLIENT_HOST}
        NODE_ENV: production
    restart: always
    ports:
      - '${CLIENT_PORT}:3000'
    environment:
      - CLIENT_HOST=${CLIENT_HOST}
      - SERVER_HOST=${SERVER_HOST}
      - NODE_ENV=production
    depends_on:
      server:
        condition: service_started
      postgresdb:
        condition: service_healthy
  server:
    container_name: practicum-server
    image: practicum-server
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
        POSTGRES_HOST: ${POSTGRES_HOST}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_PORT: ${POSTGRES_PORT}
        SECRET_KEY: ${SECRET_KEY}
    restart: always
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    environment:
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      postgresdb:
        condition: service_healthy
  postgresdb:
    container_name: postgresdb
    image: postgres:14
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
    volumes:
      - postgresdata:/var/lib/postgresql/dat
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready',
          '-q',
          '-h',
          'localhost',
          '-p',
          '${POSTGRES_PASSWORD}',
          '-U',
          '${POSTGRES_USER}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - '${PGADMIN_PORT}:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: '${PGADMIN_EMAIL}'
      PGADMIN_DEFAULT_PASSWORD: '${PGADMIN_PASSWORD}'
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      postgresdb:
        condition: service_healthy
volumes:
  postgresdata:
  pgadmin:
