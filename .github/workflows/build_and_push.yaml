name: CI/CD Pipeline

on:
  push:
    branches:
      - dev

jobs:
  build-and-push:
    environment: production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push client image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.client
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/${{ github.event.repository.name }}/client:${{ github.sha }}
          build-args: |
            CLIENT_HOST=${{ vars.CLIENT_HOST }}

      - name: Build and push server image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.server
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/${{ github.event.repository.name }}/server:dev

  deploy:
    needs: build-and-push
    environment: production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker image
        run: docker pull ${{ secrets.CI_REGISTRY_IMAGE }}:dev

      - name: Set up Docker Compose
        uses: docker/setup-qemu-action@v2

      - name: Deploy with Docker Compose
        run: docker-compose -f docker-compose-prod.yml -p ${{ github.event.repository.name }} up -d
